name: Run plugin tests
on: [push, pull_request]
jobs:
  test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['5.6', '7.0', '7.1', '7.2', '7.3']
        wordpress-versions: ['3.9.32', '4.9.15', 'latest']
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    name: PHP ${{ matrix.php-versions }} with ${{ matrix.wordpress-versions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extension-csv: mbstring, intl, mysql, mysqli
          ini-values-csv: post_max_size=256M, short_open_tag=On
          coverage: xdebug
          pecl: false
          tools: phpunit:5.7.27

      - name: Install WP Tests
        run: bash bin/install-wp-tests.sh wordpress_test root root 127.0.0.1:${{ job.services.mysql.ports['3306'] }} ${{ matrix.wordpress-versions }} true

      - name: Run phpunit tests
        run: phpunit

      - name: Run phpunit tests against multisite install
        run: WP_MULTISITE=1 phpunit

  phpcs:
    runs-on: ubuntu-latest
    name: Check WP Coding Standards
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: '7.3'
          extension-csv: mbstring, intl
          ini-values-csv: post_max_size=256M, short_open_tag=On
          coverage: none
          pecl: false
          tools: phpcs

      - name: Setup PHPCS for WordPress
        run: |
          composer global require phpcompatibility/phpcompatibility-wp
          composer global require wp-coding-standards/wpcs
          composer global require dealerdirect/phpcodesniffer-composer-installer

      - name: Run PHPCS on the plugin
        run: phpcs

